// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.2
// source: idl/pbecs/ecs.proto

package pbecs

import (
	pbtenant "github.com/cloud-fitter/cloud-fitter/gen/idl/pbtenant"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ECSInstance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 实例id
	InstanceId string `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	// 实例名称
	InstanceName string `protobuf:"bytes,2,opt,name=instance_name,json=instanceName,proto3" json:"instance_name,omitempty"`
	// 地域，数据中心
	RegionId string `protobuf:"bytes,3,opt,name=region_id,json=regionId,proto3" json:"region_id,omitempty"`
	// 可用区，物理隔离
	ZoneId string `protobuf:"bytes,4,opt,name=zone_id,json=zoneId,proto3" json:"zone_id,omitempty"`
	// 公网ip
	PublicIps []string `protobuf:"bytes,5,rep,name=public_ips,json=publicIps,proto3" json:"public_ips,omitempty"`
	// 状态
	Status string `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	// 创建时间
	CreationTime string `protobuf:"bytes,7,opt,name=creation_time,json=creationTime,proto3" json:"creation_time,omitempty"`
	// 实例描述
	Description string `protobuf:"bytes,8,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *ECSInstance) Reset() {
	*x = ECSInstance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_pbecs_ecs_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ECSInstance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ECSInstance) ProtoMessage() {}

func (x *ECSInstance) ProtoReflect() protoreflect.Message {
	mi := &file_idl_pbecs_ecs_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ECSInstance.ProtoReflect.Descriptor instead.
func (*ECSInstance) Descriptor() ([]byte, []int) {
	return file_idl_pbecs_ecs_proto_rawDescGZIP(), []int{0}
}

func (x *ECSInstance) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *ECSInstance) GetInstanceName() string {
	if x != nil {
		return x.InstanceName
	}
	return ""
}

func (x *ECSInstance) GetRegionId() string {
	if x != nil {
		return x.RegionId
	}
	return ""
}

func (x *ECSInstance) GetZoneId() string {
	if x != nil {
		return x.ZoneId
	}
	return ""
}

func (x *ECSInstance) GetPublicIps() []string {
	if x != nil {
		return x.PublicIps
	}
	return nil
}

func (x *ECSInstance) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ECSInstance) GetCreationTime() string {
	if x != nil {
		return x.CreationTime
	}
	return ""
}

func (x *ECSInstance) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type ECSStatisticReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Provider pbtenant.CloudProvider `protobuf:"varint,1,opt,name=provider,proto3,enum=pbtenant.CloudProvider" json:"provider,omitempty"`
}

func (x *ECSStatisticReq) Reset() {
	*x = ECSStatisticReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_pbecs_ecs_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ECSStatisticReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ECSStatisticReq) ProtoMessage() {}

func (x *ECSStatisticReq) ProtoReflect() protoreflect.Message {
	mi := &file_idl_pbecs_ecs_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ECSStatisticReq.ProtoReflect.Descriptor instead.
func (*ECSStatisticReq) Descriptor() ([]byte, []int) {
	return file_idl_pbecs_ecs_proto_rawDescGZIP(), []int{1}
}

func (x *ECSStatisticReq) GetProvider() pbtenant.CloudProvider {
	if x != nil {
		return x.Provider
	}
	return pbtenant.CloudProvider_ali_cloud
}

type ECSStatisticResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ecses []*ECSStatisticRespList `protobuf:"bytes,1,rep,name=ecses,proto3" json:"ecses,omitempty"`
}

func (x *ECSStatisticResp) Reset() {
	*x = ECSStatisticResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_pbecs_ecs_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ECSStatisticResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ECSStatisticResp) ProtoMessage() {}

func (x *ECSStatisticResp) ProtoReflect() protoreflect.Message {
	mi := &file_idl_pbecs_ecs_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ECSStatisticResp.ProtoReflect.Descriptor instead.
func (*ECSStatisticResp) Descriptor() ([]byte, []int) {
	return file_idl_pbecs_ecs_proto_rawDescGZIP(), []int{2}
}

func (x *ECSStatisticResp) GetEcses() []*ECSStatisticRespList {
	if x != nil {
		return x.Ecses
	}
	return nil
}

type ECSStatisticRespList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 云提供商
	Provider pbtenant.CloudProvider `protobuf:"varint,1,opt,name=provider,proto3,enum=pbtenant.CloudProvider" json:"provider,omitempty"`
	// 区域Id，参考 tenant.proto 中的各个云的区域
	RegionId int32 `protobuf:"varint,2,opt,name=regionId,proto3" json:"regionId,omitempty"`
	// 数量
	Count int64 `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	// 区域名称，方便可读，参考 tenant.proto 中的各个云的区域
	RegionName string `protobuf:"bytes,4,opt,name=regionName,proto3" json:"regionName,omitempty"`
}

func (x *ECSStatisticRespList) Reset() {
	*x = ECSStatisticRespList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_pbecs_ecs_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ECSStatisticRespList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ECSStatisticRespList) ProtoMessage() {}

func (x *ECSStatisticRespList) ProtoReflect() protoreflect.Message {
	mi := &file_idl_pbecs_ecs_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ECSStatisticRespList.ProtoReflect.Descriptor instead.
func (*ECSStatisticRespList) Descriptor() ([]byte, []int) {
	return file_idl_pbecs_ecs_proto_rawDescGZIP(), []int{2, 0}
}

func (x *ECSStatisticRespList) GetProvider() pbtenant.CloudProvider {
	if x != nil {
		return x.Provider
	}
	return pbtenant.CloudProvider_ali_cloud
}

func (x *ECSStatisticRespList) GetRegionId() int32 {
	if x != nil {
		return x.RegionId
	}
	return 0
}

func (x *ECSStatisticRespList) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ECSStatisticRespList) GetRegionName() string {
	if x != nil {
		return x.RegionName
	}
	return ""
}

var File_idl_pbecs_ecs_proto protoreflect.FileDescriptor

var file_idl_pbecs_ecs_proto_rawDesc = []byte{
	0x0a, 0x13, 0x69, 0x64, 0x6c, 0x2f, 0x70, 0x62, 0x65, 0x63, 0x73, 0x2f, 0x65, 0x63, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x62, 0x65, 0x63, 0x73, 0x1a, 0x19, 0x69, 0x64,
	0x6c, 0x2f, 0x70, 0x62, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x2f, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x87, 0x02, 0x0a, 0x0b, 0x45, 0x43, 0x53, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x72,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x7a, 0x6f, 0x6e, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x7a, 0x6f, 0x6e, 0x65, 0x49,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x69, 0x70, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x49, 0x70, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x46, 0x0a, 0x0f, 0x45, 0x43, 0x53, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x52,
	0x65, 0x71, 0x12, 0x33, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x70, 0x62, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x2e,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x08, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x22, 0xd6, 0x01, 0x0a, 0x10, 0x45, 0x43, 0x53, 0x53,
	0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x12, 0x32, 0x0a, 0x05,
	0x65, 0x63, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x62,
	0x65, 0x63, 0x73, 0x2e, 0x45, 0x43, 0x53, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x52, 0x65, 0x73, 0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x05, 0x65, 0x63, 0x73, 0x65, 0x73,
	0x1a, 0x8d, 0x01, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x08, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x70, 0x62,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x1a,
	0x0a, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65,
	0x32, 0x68, 0x0a, 0x0a, 0x45, 0x43, 0x53, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5a,
	0x0a, 0x0c, 0x45, 0x43, 0x53, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x12, 0x16,
	0x2e, 0x70, 0x62, 0x65, 0x63, 0x73, 0x2e, 0x45, 0x43, 0x53, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73,
	0x74, 0x69, 0x63, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x70, 0x62, 0x65, 0x63, 0x73, 0x2e, 0x45,
	0x43, 0x53, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x22, 0x0e, 0x2f, 0x65, 0x63, 0x73, 0x2f, 0x73, 0x74,
	0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x3a, 0x01, 0x2a, 0x42, 0x34, 0x5a, 0x32, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2d, 0x66,
	0x69, 0x74, 0x74, 0x65, 0x72, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2d, 0x66, 0x69, 0x74, 0x74,
	0x65, 0x72, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x69, 0x64, 0x6c, 0x2f, 0x70, 0x62, 0x65, 0x63, 0x73,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_idl_pbecs_ecs_proto_rawDescOnce sync.Once
	file_idl_pbecs_ecs_proto_rawDescData = file_idl_pbecs_ecs_proto_rawDesc
)

func file_idl_pbecs_ecs_proto_rawDescGZIP() []byte {
	file_idl_pbecs_ecs_proto_rawDescOnce.Do(func() {
		file_idl_pbecs_ecs_proto_rawDescData = protoimpl.X.CompressGZIP(file_idl_pbecs_ecs_proto_rawDescData)
	})
	return file_idl_pbecs_ecs_proto_rawDescData
}

var file_idl_pbecs_ecs_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_idl_pbecs_ecs_proto_goTypes = []interface{}{
	(*ECSInstance)(nil),          // 0: pbecs.ECSInstance
	(*ECSStatisticReq)(nil),      // 1: pbecs.ECSStatisticReq
	(*ECSStatisticResp)(nil),     // 2: pbecs.ECSStatisticResp
	(*ECSStatisticRespList)(nil), // 3: pbecs.ECSStatisticResp.list
	(pbtenant.CloudProvider)(0),  // 4: pbtenant.CloudProvider
}
var file_idl_pbecs_ecs_proto_depIdxs = []int32{
	4, // 0: pbecs.ECSStatisticReq.provider:type_name -> pbtenant.CloudProvider
	3, // 1: pbecs.ECSStatisticResp.ecses:type_name -> pbecs.ECSStatisticResp.list
	4, // 2: pbecs.ECSStatisticResp.list.provider:type_name -> pbtenant.CloudProvider
	1, // 3: pbecs.ECSService.ECSStatistic:input_type -> pbecs.ECSStatisticReq
	2, // 4: pbecs.ECSService.ECSStatistic:output_type -> pbecs.ECSStatisticResp
	4, // [4:5] is the sub-list for method output_type
	3, // [3:4] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_idl_pbecs_ecs_proto_init() }
func file_idl_pbecs_ecs_proto_init() {
	if File_idl_pbecs_ecs_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_idl_pbecs_ecs_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ECSInstance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_pbecs_ecs_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ECSStatisticReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_pbecs_ecs_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ECSStatisticResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_pbecs_ecs_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ECSStatisticRespList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_idl_pbecs_ecs_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_idl_pbecs_ecs_proto_goTypes,
		DependencyIndexes: file_idl_pbecs_ecs_proto_depIdxs,
		MessageInfos:      file_idl_pbecs_ecs_proto_msgTypes,
	}.Build()
	File_idl_pbecs_ecs_proto = out.File
	file_idl_pbecs_ecs_proto_rawDesc = nil
	file_idl_pbecs_ecs_proto_goTypes = nil
	file_idl_pbecs_ecs_proto_depIdxs = nil
}
