syntax = "proto3";
package pboss;

option go_package = "github.com/cloud-fitter/cloud-fitter/gen/idl/pboss";

import "idl/pbtenant/tenant.proto";
import "google/api/annotations.proto";

message OssInstance {
  // 云类型
  pbtenant.CloudProvider provider = 1;
  // 账号名称
  string account_name = 2;
  // bucket名称
  string bucket_name = 3;
  // 区域
  string location = 4;
}

message ListDetailReq {
  // 云名称
  pbtenant.CloudProvider provider = 1;
  // 账户名称，根据config.yaml中的配置，默认为第一个配置的账户
  string account_name = 2;
  // 分页相关参数，页码
  int32 page_number = 3;
  // 分页相关参数，每页数量
  int32 page_size = 4;
  // 分页相关参数，下一页的token
  string next_token = 5;
}

message ListDetailResp {
  // Oss 机器集合
  repeated OssInstance osses = 1;
  // 查询是否完成，如果为否-false，则可以将下面三个分页参数填入到请求中，继续查询
  bool finished = 2;
  // 分页相关参数，页码
  int32 page_number = 3;
  // 分页相关参数，每页数量
  int32 page_size = 4;
  // 分页相关参数，下一页的token
  string next_token = 5;
  // 请求id，出现问题后提供给云厂商，排查问题
  string request_id = 6;
}

message ListReq {
  // 云名称
  pbtenant.CloudProvider provider = 1;
}

message ListResp {
  // Oss 机器集合
  repeated OssInstance osses = 1;
}


// OSS类产品接口
// 阿里云 - OSS
service OssService {

  // 查询OSS明细  - 支持云类型、账户、分页等过滤条件
  rpc ListOssDetail(ListDetailReq) returns (ListDetailResp) {
    option (google.api.http) = {
      post : "/oss/detail"
      body : "*"
    };
  }

  // 查询OSS全量 - 根据云类型
  rpc ListOss(ListReq) returns (ListResp) {
    option (google.api.http) = {
      post : "/oss"
      body : "*"
    };
  }
}